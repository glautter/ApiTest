// <auto-generated />
using Hex.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hex.Infra.Migrations
{
    [DbContext(typeof(HexContext))]
    [Migration("20230121015351_InicialMigration")]
    partial class InicialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hex.Domain.Entities.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Idade")
                        .HasColumnType("int")
                        .HasColumnName("Idade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Nome");

                    b.Property<int>("TipoEstadoCivil")
                        .HasColumnType("int")
                        .HasColumnName("TipoEstadoCivil");

                    b.HasKey("Id");

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("Hex.Domain.Entities.Pessoa", b =>
                {
                    b.OwnsOne("Hex.Domain.Entities.Documento", "Documento", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("int");

                            b1.Property<string>("Cpf")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("Cpf");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoa");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.OwnsOne("Hex.Domain.Entities.Localidade", "Localidade", b1 =>
                        {
                            b1.Property<int>("PessoaId")
                                .HasColumnType("int");

                            b1.Property<string>("Cidade")
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)")
                                .HasColumnName("Cidade");

                            b1.Property<string>("Estado")
                                .HasMaxLength(50)
                                .HasColumnType("varchar(50)")
                                .HasColumnName("HealthPlan");

                            b1.HasKey("PessoaId");

                            b1.ToTable("Pessoa");

                            b1.WithOwner()
                                .HasForeignKey("PessoaId");
                        });

                    b.Navigation("Documento")
                        .IsRequired();

                    b.Navigation("Localidade")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
